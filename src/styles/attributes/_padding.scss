// to use attribute styles must be individually activated at the <html> (or deeper) level within the document
//
// e.g. to style elements with the `padding-horizontal-57` padding attribute
//
// <html au-styles="padding-horizontal-57">
//   <div>
//     <div padding-horizontal-57>
//
// alternatively the `padding-horizontal-57` attribute can be used directly (without activation)
//
// e.g. to achieve the same styling effect as the previous example
//
// <html>
//   <div>
//     <div au="padding-horizontal-57">

@import "../variables/_gaps";

// generate padding, top, left, bottom, right, vertical and horizontal selectors

@mixin padding-generator($suffix, $units) {
  [au~=padding#{$suffix}], [au-styles~=padding#{$suffix}] [padding#{$suffix}] {
    padding: $units;
  }

  [au~=padding-top#{$suffix}], [au-styles~=padding-top#{$suffix}] [padding-top#{$suffix}] {
    padding-top: $units;
  }

  [au~=padding-left#{$suffix}], [au-styles~=padding-left#{$suffix}] [padding-left#{$suffix}] {
    padding-left: $units;
  }

  [au~=padding-bottom#{$suffix}], [au-styles~=padding-bottom#{$suffix}] [padding-bottom#{$suffix}] {
    padding-bottom: $units;
  }

  [au~=padding-right#{$suffix}], [au-styles~=padding-right#{$suffix}] [padding-right#{$suffix}] {
    padding-right: $units;
  }

  [au~=padding-vertical#{$suffix}], [au-styles~=padding-vertical#{$suffix}] [padding-vertical#{$suffix}] {
    padding-top: $units;
    padding-bottom: $units;
  }

  [au~=padding-horizontal#{$suffix}], [au-styles~=padding-horizontal#{$suffix}] [padding-horizontal#{$suffix}] {
    padding-right: $units;
    padding-left: $units;
  }
}

// generate coarse grained named padding selectors (preferred / standardized)

@include padding-generator('-none', $gap-none);
@include padding-generator('-smallest', $gap-smallest);
@include padding-generator('-smaller', $gap-smaller);
@include padding-generator('-small', $gap-small);
@include padding-generator('-medium', $gap-medium);
@include padding-generator('-large', $gap-large);
@include padding-generator('-larger', $gap-larger);
@include padding-generator('-largest', $gap-largest);

// generate fine grained numeric (0 - 127) padding selectors (specialized)

$key: 0;

@for $o from 0 through 1 {
  @for $n from 0 through 1 {
    @for $m from 0 through 1 {
      @for $l from 0 through 1 {
        @for $k from 0 through 1 {
          @for $j from 0 through 1 {
            @for $i from 0 through 1 {
              $units: 0;

              @if (1 == $i) {
                $units: $units + $gap-smallest;
              }
              @if (1 == $j) {
                $units: $units + $gap-smaller;
              }
              @if (1 == $k) {
                $units: $units + $gap-small;
              }
              @if (1 == $l) {
                $units: $units + $gap-medium;
              }
              @if (1 == $m) {
                $units: $units + $gap-large;
              }
              @if (1 == $n) {
                $units: $units + $gap-larger;
              }
              @if (1 == $o) {
                $units: $units + $gap-largest;
              }

              @include padding-generator('-#{$key}', $units);

              $key: $key + 1;
            }
          }
        }
      }
    }
  }
}
